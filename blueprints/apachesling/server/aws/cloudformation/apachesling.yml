AWSTemplateFormatVersion: 2010-09-09

Description: A Cloudformation template for provisioning an Apache Sling server stack.

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC used to provision cluster
  VpcCidrBlock:
    Type: String
    Description: VPC CIDR IP range
  ImageId:
    Type: AWS::EC2::Image::Id
    Description: EC2 AMI ID
  InstanceType:
    Type: String
    Description: EC2 instance type
  EC2BurstMode:
    Type: String
    Description: Specifies whether to throttle or charge for CPU credits once allocation is exhausted
    AllowedValues: [standard, unlimited]
    Default: standard
#  KeyPair:
#    Type: String
#    Description: The name of the keypair for accessing the host
#  SubnetId:
#    Type: AWS::EC2::Subnet::Id
#    Description: Subnet to deploy into
  Environment:
    Type: String
    Description: The name of the environment to associate with
  UserData:
    Type: String
    Description: Bootstrap configuration to run on EC2 instance
  HostedZoneName:
    Type: String
    Description: Private hosted zone for route53 entry
  RouteName:
    Type: String
    Description: FQDN for the Sling instance

Resources:
  ApacheSlingSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ApacheSlingSG
      GroupDescription: Security group for ApacheSling
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: !Ref VpcCidrBlock
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref VpcCidrBlock
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ApacheSlingSG

  ApacheSlingEC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AmazonElasticFileSystemFullAccess

  ApacheSlingInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ApacheSlingEC2Role

  ApacheSlingInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - 01_setupCfnHup
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
          UpdateEnvironment:
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
        02_config-amazon-cloudwatch-agent:
          files:
            '/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json':
              content: !Sub |
                {
                  "metrics": {
                    "append_dimensions": {
                      "AutoScalingGroupName": "${!aws:AutoScalingGroupName}",
                      "ImageId": "${!aws:ImageId}",
                      "InstanceId": "${!aws:InstanceId}",
                      "InstanceType": "${!aws:InstanceType}"
                    },
                    "metrics_collected": {
                      "mem": {
                        "measurement": [
                          "mem_used_percent"
                        ]
                      },
                      "swap": {
                        "measurement": [
                          "swap_used_percent"
                        ]
                      }
                    }
                  }
                }
        # Invoke amazon-cloudwatch-agent-ctl to restart the AmazonCloudWatchAgent.
        03_restart_amazon-cloudwatch-agent:
          commands:
            01_stop_service:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a stop
            02_start_service:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s
        # Cfn-hup setting, it is to monitor the change of metadata.
        # When there is change in the contents of json file in the metadata section, cfn-hup will call cfn-init to restart the AmazonCloudWatchAgent.
        01_setupCfnHup:
          files:
            '/etc/cfn/cfn-hup.conf':
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root
            '/etc/cfn/hooks.d/amazon-cloudwatch-agent-auto-reloader.conf':
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init.02_config-amazon-cloudwatch-agent
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets UpdateEnvironment
                runas=root
              mode: '000400'
              owner: root
              group: root
            "/lib/systemd/system/cfn-hup.service":
              content: !Sub |
                [Unit]
                Description=cfn-hup daemon
                [Service]
                Type=simple
                ExecStart=/opt/aws/bin/cfn-hup
                Restart=always
                [Install]
                WantedBy=multi-user.target
          commands:
            01enable_cfn_hup:
              command: !Sub |
                systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: !Sub |
                systemctl start cfn-hup.service
    Properties:
      IamInstanceProfile: !Ref ApacheSlingInstanceProfile
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      CreditSpecification:
        CPUCredits: !Ref EC2BurstMode
#      KeyName: !Ref KeyPair
      Monitoring: true
      SecurityGroupIds:
        - !Ref ApacheSlingSG
#      SsmAssociations:
#        - SSMAssociation
#      SubnetId: !Ref SubnetId
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-apachesling
        - Key: Environment
          Value: !Ref Environment
      UserData: !Ref UserData

  ApacheSlingRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZoneName
      Name: !Ref RouteName
      Type: A
      TTL: '900'
      ResourceRecords:
        - !GetAtt ApacheSlingInstance.PrivateIp

#  ApacheSlingDashboard:
#    Type: AWS::CloudWatch::Dashboard
#    Properties:
#      DashboardName: ApacheSling
#      DashboardBody: !Sub |
#        {}
#
#Outputs:
