AWSTemplateFormatVersion: 2010-09-09

Description: A Cloudformation template for provisioning an ECS cluster.

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC used to provision cluster
  VpcCidrIp:
    Type: String
    Description: VPC CIDR IP range
  LoadBalancerName:
    Type: String
    Description: Name of the cluster load balancer
  LoadBalancerSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Applicable subnets for the cluster load balancer
  TargetDeregistrationDelay:
    Type: String
    Description: Delay before target deregistration (seconds)
  HealthCheckPath:
    Type: String
    Description: Path used for health check
    Default: '/'
  CertificateArn:
    Type: String
    Description: ARN of SSL certificate
  ClusterName:
    Type: String
    Description: The name of the ECS cluster
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Hosted zone for route53 entry
  RouteName:
    Type: String
    Description: FQDN for the cluster load balancer
  BlueGreenEnabled:
    Type: String
    Description: Indicates whether to enable load balancer support for blue-green deployments
    AllowedValues: [true, false]
    Default: false
  ServiceDiscoveryEnabled:
    Type: String
    Description: Indicates whether to create a namespace for service discovery
    AllowedValues: [true, false]
    Default: false

Conditions:
  CreateServiceDiscoveryNamespace:
    !Equals [true, !Ref ServiceDiscoveryEnabled]

Resources:
  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName

  ClusterNodeSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ClusterName}-NodeSG'
      GroupDescription: !Sub 'Security Group for ${ClusterName} Cluster Nodes'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 433
          ToPort: 433
          CidrIp: !Ref VpcCidrIp
          Description: Allow connections from within the VPC
      Tags:
        - Key: Name
          Value: !Sub '${ClusterName}-NodeSG'

  ServiceDiscoveryNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Condition: CreateServiceDiscoveryNamespace
    Properties:
      Name: !Ref ClusterName
      Vpc: !Ref VpcId

#Outputs:
