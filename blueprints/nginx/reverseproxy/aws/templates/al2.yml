#cloud-config
packages:
  - curl
  - python
  - chrony

timezone: Australia/Melbourne

users:
  - name: ${AuthorizedUserName}
    groups: sudo
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    ssh-authorized-keys:
      - ${AuthorizedUserSSHKey}

write_files:
  - content: |
      server {
        listen 127.0.0.1:80;
        server_name 127.0.0.1;
        location /nginx_status {
          stub_status on;
          allow 127.0.0.1;
          deny all;
        }
      }
    path: /etc/nginx/conf.d/stub_status.conf
  - content: |
      map $http_user_agent $log_ua {
        ~Amazon-Route53-Health-Check-Service 0;
        ~Googlebot 0;
        ~Baiduspider 0;

        default 1;
      }

      access_log  /var/log/nginx/access.log  main if=$log_ua;
    path: /etc/nginx/conf.d/health_check.conf
  - content: |
      {
        "logs": {
            "logs_collected": {
                "files": {
                    "collect_list": [
                        {
                            "file_path": "/var/log/nginx/access.log",
                            "log_group_name": "${NginxHostname}-access-log",
                            "log_stream_name": "{instance_id}"
                        },
                        {
                            "file_path": "/var/log/nginx/error.log",
                            "log_group_name": "${NginxHostname}-error-log",
                            "log_stream_name": "{instance_id}"
                        }
                    ]
                }
            }
        },
        "metrics": {
            "append_dimensions": {
                "AutoScalingGroupName": "$${aws:AutoScalingGroupName}",
                "ImageId": "$${aws:ImageId}",
                "InstanceId": "$${aws:InstanceId}",
                "InstanceType": "$${aws:InstanceType}"
            },
            "metrics_collected": {
                "mem": {
                    "measurement": [
                        "mem_used_percent"
                    ],
                    "metrics_collection_interval": 60
                },
                "swap": {
                    "measurement": [
                        "swap_used_percent"
                    ],
                    "metrics_collection_interval": 60
                }
            }
        }
      }
    path: /opt/aws/amazon-cloudwatch-agent/etc/config.json

mounts:
  - [ swap, none, swap, sw, 0, 0]

swap:
  filename: /var/cache/swap/swapfile
  size: auto
  maxsize: 2147483648

runcmd:
  - "printf '\nClientAliveInterval 100\nClientAliveCountMax 0' >> /etc/ssh/sshd_config"
  - service sshd restart
  - systemctl start chronyd && systemctl enable chronyd
  #  Cloudwatch Agent install
  - curl -O https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
  - rpm -U amazon-cloudwatch-agent.rpm
  - /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/config.json -s
  # NGINX install
  - amazon-linux-extras install nginx1.12 epel
  - systemctl start nginx && systemctl enable nginx
  - curl -sS -L -O https://github.com/nginxinc/nginx-amplify-agent/raw/master/packages/install.sh
  - API_KEY="${NginxAmplifyKey}" AMPLIFY_HOSTNAME="${NginxHostname}" sh ./install.sh -y
  - yum install -y python2-certbot-nginx
